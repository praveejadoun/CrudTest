{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employees/create-employee-can-deactivate-guard-service.ts","webpack:///./src/app/employees/create-employee.component.css","webpack:///./src/app/employees/create-employee.component.html","webpack:///./src/app/employees/create-employee.component.ts","webpack:///./src/app/employees/display-employee.component.css","webpack:///./src/app/employees/display-employee.component.html","webpack:///./src/app/employees/display-employee.component.ts","webpack:///./src/app/employees/employee.service.ts","webpack:///./src/app/employees/list-employees.component.css","webpack:///./src/app/employees/list-employees.component.html","webpack:///./src/app/employees/list-employees.component.ts","webpack:///./src/app/models/employee.model.ts","webpack:///./src/app/models/option.model.ts","webpack:///./src/app/options/display-option.component.css","webpack:///./src/app/options/display-option.component.html","webpack:///./src/app/options/display-option.component.ts","webpack:///./src/app/options/list-options.component.css","webpack:///./src/app/options/list-options.component.html","webpack:///./src/app/options/list-options.component.ts","webpack:///./src/app/options/option.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n<nav class=\\\"navbar navbar-default\\\">\\r\\n    <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li>\\r\\n            <a routerLink=\\\"listOptions\\\">Listoption</a>\\r\\n        </li>\\r\\n       <!--  <li>\\r\\n            <a routerLink=\\\"list\\\">List</a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"create\\\">Create</a>\\r\\n        </li> \\r\\n        <li>\\r\\n            <a routerLink=\\\"edit\\\">edit</a>\\r\\n        </li>    --> \\r\\n    </ul>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>\\r\\n</div>\\r\\n<!--<div class=\\\"container\\\">\\r\\n<app-list-employees></app-list-employees>\\r\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\n//import * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  socket: any;\n  title = 'Option Test';\n constructor(){\n  //this.socket = io(\"http://localhost:5000\");\n }\n\n ngOnInit(){\n  //this.socket.on('data1',(res)=>{\n  //console.log(\"data emitted\" + res);\n  //});\n\n }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ListEmployeesComponent } from './employees/list-employees.component';\nimport { CreateEmployeeComponent } from './employees/create-employee.component';\nimport { RouterModule,Routes } from '@angular/router'\nimport { FormsModule} from '@angular/forms'\nimport { EmployeeService } from './employees/employee.service';\nimport { DisplayEmployeeComponent } from './employees/display-employee.component';\nimport { CreateEmployeeCanDeactivateGuardService } from './employees/create-employee-can-deactivate-guard-service';\nimport { ListOptionsComponent } from './options/list-options.component';\nimport { DisplayOptionComponent } from './options/display-option.component';\nimport {OptionService} from './options/option.service'\n\nconst appRoutes :Routes=[\n  { path:'listOptions',component:ListOptionsComponent},\n  // { path:'list',component:ListEmployeesComponent},\n  \n  //{ path:'create', component:CreateEmployeeComponent,canDeactivate:[CreateEmployeeCanDeactivateGuardService]},\n  { path:'', redirectTo:'/listOptions',pathMatch:'full'}\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListEmployeesComponent,\n    CreateEmployeeComponent,\n    DisplayEmployeeComponent,\n    ListOptionsComponent,\n    DisplayOptionComponent,\n    \n    \n   ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule\n   ],\n  providers: [EmployeeService,CreateEmployeeCanDeactivateGuardService,OptionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanDeactivate } from \"@angular/router\";\r\nimport { CreateEmployeeComponent } from \"./create-employee.component\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class CreateEmployeeCanDeactivateGuardService implements CanDeactivate<CreateEmployeeComponent>\r\n{\r\n    canDeactivate(component:CreateEmployeeComponent):boolean{\r\n        console.log(\"component\");\r\n        console.log(component);\r\n        if (component.createEmployeeForm.dirty){\r\n            return confirm('Are you want to discard your changes?');\r\n        }\r\n        // if (component.employee.name===null)\r\n        // {\r\n        //     return confirm('Are you want to discard your changes?');\r\n        // }\r\n        return true;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9jcmVhdGUtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<!-- <form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEmployee(employeeForm)\\\"> -->\\n\\n<form #employeeForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveEmployee()\\\">\\n<div class=\\\"panel panel-primary\\\" >\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Create employee</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"fullName\\\">Full Name</label>\\n        <input id=\\\"fullName\\\" [(ngModel)]=\\\"employee.name\\\" name=\\\"fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n      </div>\\n        \\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input id=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"employee.email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"phoneNumber\\\">Phone Number</label>\\n          <input id=\\\"phoneNumber\\\" type=\\\"text\\\" [(ngModel)]=\\\"employee.phoneNumber\\\" name=\\\"phoneNumber\\\" class=\\\"form-control\\\">\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n          <label>contactPreference</label>\\n        <div class=\\\"form-control\\\">\\n            <label class =\\\"radio-inline\\\">\\n              <input type=\\\"radio\\\" value=\\\"phone\\\" [(ngModel)] = \\\"employee.contactPreference\\\" name =\\\"contactPreference\\\">\\n              Phone\\n            </label>\\n          \\n          <label class =\\\"radio-inline\\\">\\n              <input type=\\\"radio\\\" value=\\\"email\\\" [(ngModel)] = \\\"employee.contactPreference\\\" name =\\\"contactPreference\\\">\\n            Email\\n            </label>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label>Gender</label>\\n        <div class=\\\"form-control\\\">\\n            <label class =\\\"radio-inline\\\">\\n              <input type=\\\"radio\\\" value=\\\"male\\\" [(ngModel)] = \\\"employee.gender\\\" name =\\\"gender\\\">\\n              Male\\n            </label>\\n          \\n          <label class =\\\"radio-inline\\\">\\n              <input type=\\\"radio\\\" value=\\\"female\\\" [(ngModel)] = \\\"employee.gender\\\" name =\\\"gender\\\">\\n            Female\\n            </label>\\n          </div>\\n          \\n          <div class=\\\"form-group\\\" >\\n              <label for=\\\"department\\\">Department</label>\\n\\n            <select id=\\\"department\\\" name =\\\"department\\\" [(ngModel)]=\\\"employee.department\\\" class=\\\"form-control\\\">\\n            <option  *ngFor=\\\"let dept of departments\\\" [value]=\\\"dept.id\\\">    \\n              {{dept.name}}\\n            </option>\\n            </select>  \\n          </div>\\n             \\n\\n      </div>\\n      \\n\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n        <button type=\\\"submit\\\" class =\\\"btn btn-primary\\\">Save</button>  \\n    </div>\\n</div>\\n</form>\\n<div>\\n  {{employeeForm.value | json }}\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport{ Department } from '../models/department.model'\nimport { EmployeeService } from './employee.service';\nimport { Router } from '@angular/router';\nimport { Employee } from '../models/employee.model';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n  @ViewChild('employeeForm')  \n  private _createEmployeeForm: NgForm;\n  public get createEmployeeForm(): NgForm {\n    return this._createEmployeeForm;\n  }\n  \n  employee:Employee={\n  id : null,\n  name:null,\n  gender:null,\n  email:'',\n  phoneNumber:null,\n  contactPreference:null,\n  dateOfBirth: null,\n  department:null,\n  isActive:false,\n  photoPath:null\n}\n\ndepartments:Department[]=[\n{id:1,name:\"Help Desk\"},\n{id:2,name:\"HR\"},\n{id:3,name:\"IT\"},\n{id:4,name:\"Payroll\"},\n\n] ;\n\n  constructor(private _employeeService:EmployeeService,private _router:Router) { }\n\n  ngOnInit() {\n  }\n\n  saveEmployee(){\n    this.employee.photoPath='assets/images/image4.png';\n    this._employeeService.saveEmployees(this.employee);\n    this._router.navigate(['list'])\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9kaXNwbGF5LWVtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n\\n<div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">{{employee.name}}</h3>\\n      \\n      \\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"col-xs-10\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-4\\\">\\n            <img [src] =\\\"employee.photoPath\\\" />\\n          </div>\\n          <div class=\\\"col-xs-8\\\">\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                   name\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.name}}\\\"\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    gender\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.gender}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    email\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.email}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    phoneNumber\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.phoneNumber}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    contactPreference\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.contactPreference}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    dateOfBirth\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.dateOfBirth | date}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    department\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.department}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    isActive\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{employee.isActive}}\\\"\\n                </div>\\n            </div>\\n           \\n          </div>\\n        </div>\\n      </div>\\n    \\n    </div>\\n  </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Employee } from '../models/employee.model';\n\n@Component({\n  selector: 'app-display-employee',\n  templateUrl: './display-employee.component.html',\n  styleUrls: ['./display-employee.component.css']\n})\nexport class DisplayEmployeeComponent implements OnInit {\n@Input() employee:Employee;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  editEmployee()\n  {\n    alert(\"hello\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Employee } from \"../models/employee.model\";\r\n\r\n@Injectable()\r\nexport class EmployeeService{\r\n    private listEmployee:Employee[]=[\r\n        {\r\n          id : 1,\r\n          name:'Praveen',\r\n          gender:'male',\r\n          email:'abc@abc.com',\r\n          phoneNumber:12345678,\r\n          contactPreference:'Email',\r\n          dateOfBirth: new Date('10/25/988'),\r\n          department:'IT',\r\n          isActive:true,\r\n          photoPath:'assets/images/image1.png'\r\n        },\r\n        {\r\n          id : 2,\r\n          name:'Raman',\r\n          gender:'male',\r\n          email:'abc@abc.com',\r\n          phoneNumber:12345678,\r\n          contactPreference:'Phone',\r\n          dateOfBirth: new Date('10/25/988'),\r\n          department:'IT',\r\n          isActive:true,\r\n          photoPath:'assets/images/image2.png'\r\n        },\r\n        {\r\n          id : 3,\r\n          name:'Ramesh',\r\n          gender:'male',\r\n          email:'abc@abc.com',\r\n          phoneNumber:12345678,\r\n          contactPreference:'Email',\r\n          dateOfBirth: new Date('10/25/988'),\r\n          department:'IT',\r\n          isActive:true,\r\n          photoPath:'assets/images/image3.png'\r\n          \r\n        }\r\n      ];\r\n \r\n     public getEmployees():Employee[]{\r\n          return this.listEmployee;\r\n      }\r\n\r\n    public saveEmployees(employee:Employee):void{\r\n        this.listEmployee.push(employee);\r\n    }\r\n\r\n    public editEmployees(employee:Employee):void{\r\n      employee.name = \"Praveen Singh edited\";\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9saXN0LWVtcGxveWVlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<button (click)=\\\"sendata()\\\">send data</button>\\n\\n<div  *ngFor =\\\"let employee of employees\\\">\\n<app-display-employee [employee]=\\\"employee\\\"></app-display-employee>   \\n<button (click)=\\\"editEmployee(employee)\\\">editEmployee</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../models/employee.model';\nimport { EmployeeService } from './employee.service';\nimport * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-list-employees',\n  templateUrl: './list-employees.component.html',\n  styleUrls: ['./list-employees.component.css']\n})\nexport class ListEmployeesComponent implements OnInit {\n  employees: Employee[];\n  socket;\n  constructor(private _employeeService:EmployeeService) {\n    this.socket = io(\"http://localhost:5000\");\n   }\n\n  ngOnInit() {\n  this.employees = this._employeeService.getEmployees();\n  \n  this.socket.on('data1',(res)=>{\n    console.log(\"data emitted\" + res.id +\";\" + \";\" + res.name)});\n    \n  }\n\n  sendata()\n  {\n    this.socket.emit('getdata',\"client to server\");\n    \n  }\n\n  editEmployee(employee:Employee){\n    this._employeeService.editEmployees(employee);\n  }\n\n}\n","export class Employee {\r\n    id : number;\r\n    name:string;\r\n    gender:string;\r\n    email?:string;\r\n    phoneNumber?:number;\r\n    contactPreference:string;\r\n    dateOfBirth: Date;\r\n    department:string;\r\n    isActive:boolean;\r\n    photoPath?:string;\r\n\r\n}","// export class Option {\r\n//     id : number;\r\n//     name:string;\r\n//     expiryDate:Date;\r\n//     strikePrice?:number;\r\n//     premium?:number;\r\n//     format:number;\r\n//     formatColor:string;\r\n// }\r\n\r\nexport class Option {\r\n     id :string;\r\n     optionName:string;\r\n     strike:number\r\n     volatility:number;\r\n     expiryDate:Date;\r\n     premium?:number;\r\n     format:number;\r\n     formatColor:string;\r\n }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wdGlvbnMvZGlzcGxheS1vcHRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\\n<!-- \\n<div class=\\\"panel panel-primary\\\">\\n        \\n    \\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">{{option.name}}</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"col-xs-10\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-8\\\">\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                   name\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{option.name}}\\\"\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    ExpiryDate\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{option.expiryDate | date}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    Strike Price\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{option.strikePrice}}\\\"\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" >\\n                <div class=\\\"col-xs-6\\\">\\n                    Premium\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    : \\\"{{option.premium}}\\\"\\n                </div>\\n            </div>\\n            \\n          </div>\\n        </div>\\n      </div>\\n    \\n    </div>\\n  </div> -->\"","\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Option } from '../models/option.model';\n\n@Component({\n  selector: 'app-display-option',\n  templateUrl: './display-option.component.html',\n  styleUrls: ['./display-option.component.css']\n})\nexport class DisplayOptionComponent implements OnInit {\n  @Input() option:Option;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29wdGlvbnMvbGlzdC1vcHRpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--<button (click)=\\\"addOption(option)\\\">New Option</button>-->\\n<!--<button (click)=\\\"randOption()\\\">Calculate Price</button>-->\\n\\n\\n<!--<div  *ngFor =\\\"let option of options\\\">-->\\n  <!--  <button (click)=\\\"editOption(option)\\\">editOption</button> !-->\\n  \\n  <table class=\\\"table\\\" border=\\\"1\\\">\\n        <thead class=\\\"thead-dark\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Option Name</th>\\n            <th scope=\\\"col\\\">Strike Price</th>\\n            <th scope=\\\"col\\\">Volatility</th>\\n            <th scope=\\\"col\\\">Expiry Date</th>\\n            <th scope=\\\"col\\\">Premium</th>\\n          </tr>\\n        </thead> \\n        <tbody *ngFor =\\\"let option of options;trackBy:trackByOptionCode\\\">\\n              \\n          <tr *ngIf=\\\"option.formatColor === 'White'\\\" [style.background-color]=\\\"'white'\\\">\\n                  <th scope=\\\"row\\\">{{option.id}}</th>\\n                  <td>{{option.optionName}}</td>\\n                  <td>{{option.strike}}</td>\\n                  <td>{{option.volatility}}</td>\\n                  <td>{{option.expiryDate | date}}</td>\\n                  <td>{{option.premium}}</td>\\n          </tr>\\n          <tr *ngIf=\\\"option.formatColor === 'Green'\\\" [style.background-color]=\\\"'green'\\\">\\n            <th scope=\\\"row\\\">{{option.id}}</th>\\n                  <td>{{option.optionName}}</td>\\n                  <td>{{option.strike}}</td>\\n                  <td>{{option.volatility}}</td>\\n                  <td>{{option.expiryDate | date}}</td>\\n                  <td>{{option.premium}}</td>\\n        </tr>\\n          <tr *ngIf=\\\"option.formatColor === 'Red'\\\" [style.background-color]=\\\"'red'\\\">\\n            <th scope=\\\"row\\\">{{option.id}}</th>\\n                  <td>{{option.optionName}}</td>\\n                  <td>{{option.strike}}</td>\\n                  <td>{{option.volatility}}</td>\\n                  <td>{{option.expiryDate | date}}</td>\\n                  <td>{{option.premium}}</td>\\n        </tr>\\n        </tbody>\\n        </table>\\n\\n    <!--<app-display-option [option]=\\\"option\\\"></app-display-option>-->   \\n<!--</div>-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Option } from '../models/option.model';\nimport { OptionService } from './option.service';\nimport * as io from 'socket.io-client';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-list-options',\n  templateUrl: './list-options.component.html',\n  styleUrls: ['./list-options.component.css']\n})\nexport class ListOptionsComponent implements OnInit {\n  socket;\n  op:Option;\n  \n  trackByOptionCode(index:number,option:any):number{\n  return option.id;\n\n  }\n  \n  \n  options: Option[];\n  constructor(private _optionService:OptionService) {\n    \n    this.socket = io(environment.webSocketURL);\n   }\n\n   \n\n  ngOnInit() {\n    //this.options = this._optionService.getOption();\n    this._optionService.getOption().subscribe(optionList=>{\n      this.options=optionList;\n    });\n    this.addOption();\n\n    this.socket.on('data1',(res)=>{\n      console.log(\"data emitted from server\" + res.id +\";\" + \";\" + res.name)\n    \n      \n      console.log(res.id);  \n      var oppp = this.options;\n      if (res.premium >=oppp[res.id].premium )\n        oppp[res.id].formatColor = \"Red\";\n      else if(res.premium ==oppp[res.id].premium)\n        oppp[res.id].formatColor = \"White\";\n      else\n      oppp[res.id].formatColor = \"Green\";\n      \n      oppp[res.id].premium = res.premium;\n      console.log(oppp[res.id].formatColor);\n        \n    });\n  }\n\n  editOption(option:Option){\n    this._optionService.editOption(option);\n  }\n  \n  addOption(){\n  //var len = this.options.length;\n    for (let i = 1; i < 100; i++) {\n      this.op = new Option();\n      this.op.id = i.toString();\n      this.op.optionName = \"AAPL190412C00130000-\" + i;\n      this.op.strike = i*100;\n      this.op.volatility = .05;\n      this.op.expiryDate = new Date('12/25/1988')\n      this.op.premium = i*10;\n      this.op.format=0;\n      this.op.formatColor=\"White\";\n      this._optionService.newOption(this.op);\n      }\n      //this.randOption();\n    }\n\n    randOption(){\n      //for (let i = 1; i < 5000; i++) {\n      \n      var len = this.options.length;\n      //alert(len);\n      var rnd = Math.floor(Math.random() * len-1) + 1 \n     //alert(\"random:\" + rnd);\n      console.log(rnd);  \n      var oppp = this.options;\n      oppp[rnd].format =1;\n      oppp[rnd].premium = rnd;\n      //alert(oppp[rnd]);\n      //}  \n      \n  }\n\n  }\n","import { Injectable } from '@angular/core';\nimport { Option } from \"../models/Option.model\";\nimport { Observable,BehaviorSubject, of, observable, from } from '../../../node_modules/rxjs';\nimport { catchError, observeOn } from 'rxjs/operators';\nimport { ObserveOnOperator } from '../../../node_modules/rxjs/internal/operators/observeOn';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OptionService {\n\n   private listOption:Option[]=[];\n  //=[\n  //   {\n  //     id : 1,\n  //     name:'OP-1',\n  //     expiryDate:new Date('10/25/1988'),\n  //     strikePrice:300,\n  //     premium:10,\n  //     format:0,\n  //     formatColor:\"White\"\n  //   } \n  // ];\n\n public getOption():Observable<Option[]>{\n      return  of(this.listOption);\n\n  }\n\npublic newOption(option:Option):void{\n    this.listOption.push(option);\n}\n\npublic editOption(option:Option):void{\n  option.optionName = \"Option  changed\";\n  option.format = 1;\n  \n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  webSocketURL: 'http://localhost:5000'\n  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}